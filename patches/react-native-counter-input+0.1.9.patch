diff --git a/node_modules/react-native-counter-input/build/dist/CounterInput.d.ts b/node_modules/react-native-counter-input/build/dist/CounterInput.d.ts
index e5fa5aa..b2ffd1b 100644
--- a/node_modules/react-native-counter-input/build/dist/CounterInput.d.ts
+++ b/node_modules/react-native-counter-input/build/dist/CounterInput.d.ts
@@ -11,6 +11,7 @@ export interface ICounterInputProps {
     decreaseButtonBackgroundColor?: string;
     width?: number;
     height?: number;
+    value?: number;
     borderRadius?: number;
     onIncreasePress?: (counter: number) => void;
     onDecreasePress?: (counter: number) => void;
diff --git a/node_modules/react-native-counter-input/build/dist/CounterInput.js b/node_modules/react-native-counter-input/build/dist/CounterInput.js
index 74aae92..d9148b7 100644
--- a/node_modules/react-native-counter-input/build/dist/CounterInput.js
+++ b/node_modules/react-native-counter-input/build/dist/CounterInput.js
@@ -18,15 +18,15 @@ class CounterInput extends React.Component {
     constructor(props) {
         super(props);
         this.handleOnIncreasePress = () => {
-            const { onChange, onIncreasePress } = this.props;
-            this.setState({ isPressed: true, counter: this.state.counter + 1 }, () => {
+            const { onChange, onIncreasePress, value } = this.props;
+            this.setState({ isPressed: true, counter: value + 1 }, () => {
                 onIncreasePress && onIncreasePress(this.state.counter);
                 onChange && onChange(this.state.counter);
             });
         };
         this.handleOnDecreasePress = () => {
-            const { onChange, onDecreasePress } = this.props;
-            this.setState({ isPressed: false, counter: this.state.counter - 1 }, () => {
+            const { onChange, onDecreasePress,value } = this.props;
+            this.setState({ isPressed: false, counter: value - 1 }, () => {
                 onDecreasePress && onDecreasePress(this.state.counter);
                 onChange && onChange(this.state.counter);
             });
@@ -58,7 +58,7 @@ class CounterInput extends React.Component {
         };
         this.renderTextInput = () => {
             const { counter } = this.state;
-            return (<react_native_1.TextInput numberOfLines={1} keyboardType="numeric" style={CounterInput_style_1.default.textInputStyle} onChangeText={(text) => this.handleOnChangeText(text)}>
+            return (<react_native_1.TextInput numberOfLines={1} editable={false} keyboardType="numeric" style={CounterInput_style_1.default.textInputStyle} onChangeText={(text) => this.handleOnChangeText(text)}>
         {counter}
       </react_native_1.TextInput>);
         };
@@ -68,7 +68,7 @@ class CounterInput extends React.Component {
         };
     }
     render() {
-        const { style, horizontal = false, backgroundColor = "#fff", width = horizontal ? 170 : undefined, borderRadius = 24, } = this.props;
+        const { style, horizontal = false, backgroundColor = "#fff", width = horizontal ? 100 : undefined, borderRadius = 24, } = this.props;
         return (<react_native_1.View style={[
             CounterInput_style_1._container(width, horizontal, backgroundColor, borderRadius),
             style,
diff --git a/node_modules/react-native-counter-input/build/dist/CounterInput.style.js b/node_modules/react-native-counter-input/build/dist/CounterInput.style.js
index be88451..f1bbdd0 100644
--- a/node_modules/react-native-counter-input/build/dist/CounterInput.style.js
+++ b/node_modules/react-native-counter-input/build/dist/CounterInput.style.js
@@ -4,67 +4,71 @@ exports._decreaseButtonStyle = exports._increaseButtonStyle = exports._container
 const react_native_1 = require("react-native");
 exports._container = (width, horizontal, backgroundColor, borderRadius) => ({
     width: width,
+    height: 30,
     backgroundColor,
-    borderRadius: borderRadius,
-    padding: horizontal ? 0 : 9,
+    borderRadius: 3,
+    padding: horizontal ? 10 : 9,
     minHeight: horizontal ? 45 : 140,
     maxWidth: horizontal ? undefined : 70,
     flexDirection: horizontal ? "row" : "column",
     alignItems: "center",
     justifyContent: "space-evenly",
-    shadowRadius: 8,
-    shadowOpacity: 0.2,
-    shadowColor: "#000",
-    elevation: 2,
-    shadowOffset: {
-        width: 0,
-        height: 3,
-    },
+    borderWidth: 1,
+    borderColor: '#eee',
+    // shadowRadius: 8,
+    // shadowOpacity: 0.2,
+    // shadowColor: "#000",
+    // elevation: 2,
+    // shadowOffset: {
+    //     width: 0,
+    //     height: 3,
+    // },
 });
 exports._increaseButtonStyle = (isPressed, increaseButtonBackgroundColor) => ({
-    width: 40,
-    height: 40,
+    width: 25,
+    height: 25,
     borderRadius: 16,
     alignItems: "center",
     justifyContent: "center",
     backgroundColor: isPressed ? increaseButtonBackgroundColor : "transparent",
-    shadowOpacity: isPressed ? 0.1 : 0,
-    shadowRadius: 3,
-    shadowColor: "#000",
-    shadowOffset: {
-        width: 0,
-        height: 3,
-    },
+    // shadowOpacity: isPressed ? 0.1 : 0,
+    // shadowRadius: 3,
+    // shadowColor: "#000",
+    // shadowOffset: {
+    //     width: 0,
+    //     height: 3,
+    // },
 });
 exports._decreaseButtonStyle = (isPressed, decreaseButtonBackgroundColor) => ({
-    width: 40,
-    height: 40,
+    width: 25,
+    height: 25,
     borderRadius: 16,
     alignItems: "center",
     justifyContent: "center",
     backgroundColor: isPressed ? "transparent" : decreaseButtonBackgroundColor,
-    shadowOpacity: isPressed ? 0 : 0.1,
-    shadowRadius: 3,
-    shadowColor: "#000",
-    shadowOffset: {
-        width: 0,
-        height: 3,
-    },
+    // shadowOpacity: isPressed ? 0 : 0.1,
+    // shadowRadius: 3,
+    // shadowColor: "#000",
+    // shadowOffset: {
+    //     width: 0,
+    //     height: 3,
+    // },
 });
 exports.default = react_native_1.StyleSheet.create({
     textInputStyle: {
         width: 40,
         minHeight: 40,
-        fontSize: 24,
+        fontSize: 18,
         marginTop: 12,
         marginBottom: 8,
+        color: '#000',
         alignSelf: "center",
         fontWeight: "bold",
         textAlign: "center",
     },
     buttonImageStyle: {
-        width: 15,
-        height: 15,
+        width: 10,
+        height: 10,
     },
 });
 //# sourceMappingURL=CounterInput.style.js.map
\ No newline at end of file

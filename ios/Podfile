$RNFirebaseAsStaticFramework = true

require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

platform :ios, '11.0'
install! 'cocoapods', :deterministic_uuids => false

target 'sendwich_mobile' do
  # use_frameworks!
  config = use_native_modules!
  pod 'NMapsMap','3.15.0'
  pod 'RNIap', :path => '../node_modules/react-native-iap'

  pod 'Firebase', :modular_headers => true 
  pod 'FirebaseCore', :modular_headers => true 
  pod 'GoogleUtilities', :modular_headers => true
  pod 'KakaoSDKCommon'
  pod 'KakaoSDKAuth'
  pod 'KakaoSDKUser'

  # Flags change depending on the env values.
  flags = get_default_flags()

  use_react_native!(
    :path => config[:reactNativePath],
    # to enable hermes on iOS, change `false` to `true` and then install pods
    # :hermes_enabled => true,
    :fabric_enabled => flags[:fabric_enabled],
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )



  pod 'RNVectorIcons', :path => '../node_modules/react-native-vector-icons'

  pod 'react-native-pager-view', :path => '../node_modules/react-native-pager-view'

  pod 'RNGestureHandler', :podspec => '../node_modules/react-native-gesture-handler/RNGestureHandler.podspec'

  pod 'ReactNativeART', :path => '../node_modules/@react-native-community/art'

  target 'sendwich_mobileTests' do
    inherit! :complete
    # Pods for testing
  end

  # post_install do |installer|
  #   installer.pods_project.targets.each do |target|
  #     target.build_configurations.each do |config|
  #       config.build_settings['ENABLE_BITCODE'] = 'NO'
  #         config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '11.0'
  #     end
  #   end
  #   `sed -i -e  $'s/__IPHONE_10_0/__IPHONE_12_0/' Pods/RCT-Folly/folly/portability/Time.h`
  # end

  ########### Xcode14 업데이트 후  코드 변경
  post_install do |installer|
    installer.pods_project.targets.each do |target|
      if target.respond_to?(:product_type) and target.product_type == "com.apple.product-type.bundle"
        target.build_configurations.each do |config|
            config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
            config.build_settings['BUILD_LIBRARY_FOR_DISTRIBUTION'] = 'YES'
        end
      end
    end
  end

  # Enables Flipper.
  #
  # Note that if you have use_frameworks! enabled, Flipper will not work and
  # you should disable the next line.
  # use_flipper!({ 'Flipper' => '0.74.0' })
  #   post_install do |installer|
  #   flipper_post_install(installer)
  # end
end
